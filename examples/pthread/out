--- main.c	2014-07-27 11:08:00.944297546 +0800
+++ /home/kay/dpdk-1.7.0/examples/pthread/main.c	2014-07-28 00:12:58.192840538 +0800
@@ -105,7 +105,7 @@
 #define TX_HTHRESH 0  /**< Default values of TX host threshold reg. */
 #define TX_WTHRESH 0  /**< Default values of TX write-back threshold reg. */
 
-#define MAX_PKT_BURST 2
+#define MAX_PKT_BURST 1
 #define BURST_TX_DRAIN_US 100 /* TX drain every ~100us */
 
 /*
@@ -168,14 +168,15 @@
 };
 
 struct rte_mempool * l2fwd_pktmbuf_pool = NULL;
-
+#define NUM_MAX_CORE 32
 /* Per-port statistics struct */
-struct l2fwd_port_statistics {
+struct l2fwd_core_statistics {
 	uint64_t tx;
 	uint64_t rx;
 	uint64_t dropped;
+	int enable;
 } __rte_cache_aligned;
-struct l2fwd_port_statistics port_statistics[32];
+struct l2fwd_core_statistics core_statistics[NUM_MAX_CORE];
 
 /* A tsc-based timer responsible for triggering statistics printout */
 #define TIMER_MILLISECOND 2000000ULL /* around 1ms at 2 Ghz */
@@ -220,19 +221,20 @@
 
 	printf("\nPort statistics ====================================");
 
-	for (core_id = 0; core_id < NUM_QUEUE * 2; core_id ++) {
+	for (core_id = 0; core_id < NUM_MAX_CORE; core_id ++) {
+		if (core_statistics[core_id].enable == 0) continue;
 		printf("\nStatistics for core %d ------------------------------"
 				"    Packets sent: %11"PRIu64
 				"    Packets received: %11"PRIu64
 				"    Packets dropped: %11"PRIu64,
 				core_id,
-				port_statistics[core_id].tx,
-				port_statistics[core_id].rx,
-				port_statistics[core_id].dropped);
-
-		total_packets_dropped += port_statistics[core_id].dropped;
-		total_packets_tx += port_statistics[core_id].tx;
-		total_packets_rx += port_statistics[core_id].rx;
+				core_statistics[core_id].tx,
+				core_statistics[core_id].rx,
+				core_statistics[core_id].dropped);
+
+		total_packets_dropped += core_statistics[core_id].dropped;
+		total_packets_tx += core_statistics[core_id].tx;
+		total_packets_rx += core_statistics[core_id].rx;
 	}
 
 	for (queue_id = 0; queue_id < NUM_QUEUE; queue_id ++) {
@@ -248,11 +250,10 @@
 			total_packets_tx,
 			total_packets_rx,
 			total_packets_dropped);
-	printf("\nTX Speed = %5.2lf Gbps, RX Speed = %5.2lf Gbps, latency count %18"PRIu64 "rte_get_timer_hz %1d, rte_get_tsc_hz %ld,  average %lf", 
+	printf("\nTX Speed = %5.2lf Gbps, RX Speed = %5.2lf Gbps, latency count %18"PRIu64 " average %lf", 
 			(double)(total_packets_tx * pktlen * 8) / (double) ((subtime.tv_sec*1000000+subtime.tv_usec) * 1000),
 			(double)(total_packets_rx * pktlen * 8) / (double) ((subtime.tv_sec*1000000+subtime.tv_usec) * 1000),
-			total_latency_cnt, rte_get_timer_hz(), rte_get_tsc_hz(), (total_latency/total_latency_cnt)/(rte_get_tsc_hz()/1e6));
-	//ts_count, 0, 0, ts_total/ts_count);
+			total_latency_cnt, (total_latency/total_latency_cnt)/(rte_get_tsc_hz()/1e6));
 	printf("\n====================================================\n");
 	
 }
@@ -266,7 +267,7 @@
 	unsigned int core_id = context->core_id;
 	unsigned int queue_id = context->queue_id;
 
-	unsigned long mask = 1 << 1;
+	unsigned long mask = 1 << core_id;
 	if (sched_setaffinity(0, sizeof(unsigned long), (cpu_set_t *)&mask) < 0) {
 		assert(0);
 	}
@@ -308,13 +309,16 @@
 	uint32_t *ip;
 	uint32_t ip_ctr = 1;
 	unsigned int port, ret;
+#if 0
 	uint64_t prev_tsc, diff_tsc, cur_tsc, timer_tsc;
 	prev_tsc = 0;
 	timer_tsc = 0;
+#endif
 
 	if (queue_id == 0) {
 		gettimeofday(&startime, NULL);
 	}
+	core_statistics[core_id].enable = 1;
 	while (1) {
 #if 0
 		cur_tsc = rte_rdtsc();
@@ -348,9 +352,9 @@
 
 		port = 0;
 		ret = rte_eth_tx_burst(port, (uint16_t) queue_id, m_table, (uint16_t) qconf->tx_mbufs[queue_id].len);
-		port_statistics[core_id].tx += ret;
+		core_statistics[core_id].tx += ret;
 		if (unlikely(ret < qconf->tx_mbufs[queue_id].len)) {
-			port_statistics[core_id].dropped += (qconf->tx_mbufs[queue_id].len - ret);
+			core_statistics[core_id].dropped += (qconf->tx_mbufs[queue_id].len - ret);
 		}
 	}
 }
@@ -358,14 +362,14 @@
 /* main processing loop */
 void *rx_loop(context_t *context)
 {
-	struct rte_mbuf *pkts_burst[MAX_PKT_BURST * 2];
+	struct rte_mbuf *pkts_burst[MAX_PKT_BURST];
 	struct rte_mbuf *m;
 	unsigned int core_id = context->core_id;
 	unsigned int queue_id = context->queue_id;
 	uint64_t prev_tsc, diff_tsc, cur_tsc, timer_tsc;
 	unsigned portid, nb_rx;
 
-	unsigned long mask = 1 << 3;
+	unsigned long mask = 1 << core_id;
 	if (sched_setaffinity(0, sizeof(unsigned long), (cpu_set_t *)&mask) < 0) {
 		assert(0);
 	}
@@ -374,6 +378,7 @@
 	timer_tsc = 0;
 
 	RTE_LOG(INFO, L2FWD, "entering main loop on core %u\n", core_id);
+	core_statistics[core_id].enable = 1;
 
 	while (1) {
 
@@ -404,7 +409,7 @@
 		nb_rx = rte_eth_rx_burst((uint8_t) portid, queue_id,
 				pkts_burst, MAX_PKT_BURST);
 
-		port_statistics[core_id].rx += nb_rx;
+		core_statistics[core_id].rx += nb_rx;
 
 		if (nb_rx > 0) {
 			m = pkts_burst[0];
@@ -414,8 +419,8 @@
 			uint64_t now = rte_rdtsc();
 			uint64_t ts = *(uint64_t *)((char *)(m->pkt.data) + 56);
 			if (ts != 0) {
-				ts_total[core_id] += now - ts;
-				ts_count[core_id] ++;
+				ts_total[queue_id] += now - ts;
+				ts_count[queue_id] ++;
 			}
 		}
 
@@ -658,7 +663,7 @@
 		rte_eth_promiscuous_enable(portid);
 
 		/* initialize port stats */
-		memset(&port_statistics, 0, sizeof(port_statistics));
+		memset(&core_statistics, 0, sizeof(core_statistics));
 	}
 	fflush(stdout);
 
@@ -679,15 +684,16 @@
 	context_t *context;
 
 	for (i = 0; i < NUM_QUEUE; i ++) {
+		
 		context = (context_t *) malloc (sizeof(context_t));
-		context->core_id = i * 2;
+		context->core_id = i * 2 + 1;
 		context->queue_id = i;
 		if (pthread_create(&tid, &attr, (void *)rx_loop, (void *)context) != 0) {
 			perror("pthread_create error!!\n");
 		}
 
 		context = (context_t *) malloc (sizeof(context_t));
-		context->core_id = i * 2 + 1;
+		context->core_id = (i + NUM_QUEUE) * 2 + 1;
 		context->queue_id = i;
 		if (pthread_create(&tid, &attr, (void *)tx_loop, (void *)context) != 0) {
 			perror("pthread_create error!!\n");
